<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.eqianyuan.dao.ISignUpDao">
    <resultMap id="BaseResultMap" type="cn.eqianyuan.bean.po.SignUpPO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="supplier_side_id" property="supplierSideId" jdbcType="VARCHAR"/>
        <result column="demand_id" property="demandId" jdbcType="VARCHAR"/>
        <result column="work" property="work" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMapBySupplierSignUp" type="cn.eqianyuan.bean.po.SupplierSignUpDemandPO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <id column="name" property="name" jdbcType="VARCHAR"/>
        <result column="begin_cycle" property="beginCycle" jdbcType="INTEGER"/>
        <result column="end_cycle" property="endCycle" jdbcType="INTEGER"/>
        <result column="demand_discribe" property="demandDiscribe" jdbcType="VARCHAR"/>
        <result column="work" property="work" jdbcType="VARCHAR"/>
        <result column="persons_amount" property="personsAmount" jdbcType="INTEGER"/>
        <result column="sign_up_work" property="signUpWork" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseResultMapByDemandSignUp" type="cn.eqianyuan.bean.po.DemandSignUpSupplierPO">
        <id column="supplier_side_id" property="supplierSideId" jdbcType="VARCHAR"/>
        <id column="demand_id" property="demandId" jdbcType="VARCHAR"/>
        <id column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="head_portrait" property="headPortrait" jdbcType="VARCHAR"/>
        <result column="working_years" property="workingYears" jdbcType="INTEGER"/>
        <result column="expect_pay" property="expectPay" jdbcType="INTEGER"/>
        <result column="sign_up_work" property="signUpWork" jdbcType="VARCHAR"/>
        <result column="sign_up_time" property="signUpTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, supplier_side_id, demand_id, work, create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sign_up
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sign_up
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="cn.eqianyuan.bean.po.SignUpPO">
    insert into sign_up (id, supplier_side_id, demand_id, 
      work, create_time)
    values (#{id,jdbcType=VARCHAR}, #{supplierSideId,jdbcType=VARCHAR}, #{demandId,jdbcType=VARCHAR}, 
      #{work,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.eqianyuan.bean.po.SignUpPO">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into sign_up
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="supplierSideId != null">
                supplier_side_id,
            </if>
            <if test="demandId != null">
                demand_id,
            </if>
            <if test="work != null">
                work,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="supplierSideId != null">
                #{supplierSideId,jdbcType=VARCHAR},
            </if>
            <if test="demandId != null">
                #{demandId,jdbcType=VARCHAR},
            </if>
            <if test="work != null">
                #{work,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.eqianyuan.bean.po.SignUpPO">
        update sign_up
        <set>
            <if test="supplierSideId != null">
                supplier_side_id = #{supplierSideId,jdbcType=VARCHAR},
            </if>
            <if test="demandId != null">
                demand_id = #{demandId,jdbcType=VARCHAR},
            </if>
            <if test="work != null">
                work = #{work,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.eqianyuan.bean.po.SignUpPO">
    update sign_up
    set supplier_side_id = #{supplierSideId,jdbcType=VARCHAR},
      demand_id = #{demandId,jdbcType=VARCHAR},
      work = #{work,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="selectBySupplierSideId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sign_up
        where supplier_side_id = #{supplierSideId}
        and demand_id = #{demandId}
    </select>

    <select id="countBySigup" resultType="java.lang.Integer">
    select sum(cnt) from(
    select
    count(1) cnt
    from sign_up
    where supplier_side_id = #{supplierId}
    and demand_id = #{demandId}
    union
    select
    count(1) cnt
    from sign_up_history
    where supplier_side_id = #{supplierId}
    and demand_id = #{demandId}
    ) cnt
  </select>

    <select id="countBySupplierId" resultType="java.lang.Integer">
        select count(1)
        from sign_up su, demand
        where su.supplier_side_id = #{supplierId}
        and su.demand_id = demand.id
    </select>

    <select id="selectBySupplierPagination" resultMap="BaseResultMapBySupplierSignUp">
        select
        demand.id, demand.name, demand.begin_cycle, demand.end_cycle, demand.demand_discribe,
        GROUP_CONCAT(dep.work) work, sum(dep.persons_amount) persons_amount,
        su.`work` sign_up_work
        from demand, sign_up su, demand_employ_persons dep
        where
        demand.id = su.demand_id
        and
        demand.id = dep.demand_id
        and
        su.supplier_side_id = #{supplierId}
        group by demand.id
        order by create_time desc
        limit ${page.start}, ${page.pageSize}
    </select>

    <select id="countByDemandId" resultType="java.lang.Integer">
        select count(1)
        from sign_up su, demand
        where su.demand_id = #{demandId}
        and su.demand_id = demand.id
        and demand.demand_side_id = #{demandSideId}
    </select>

    <select id="selectByDemandPagination" resultMap="BaseResultMapByDemandSignUp">
        select
        su.supplier_side_id, su.demand_id ,su.`work` sign_up_work, su.create_time sign_up_time, ss.nick_name, ss.head_portrait, ss.working_years, resume.expect_pay
        from sign_up su, demand, supplier_side ss, resume
        where
        su.supplier_side_id = ss.id
        and
        ss.id = resume.supplier_side_id
        and
        su.demand_id = #{demandId}
        and
        su.demand_id = demand.id
        and
        demand.demand_side_id = #{demandSideId}
        order by sign_up_time desc
        limit ${page.start}, ${page.pageSize}
    </select>

    <insert id="copyInsertHistory" parameterType="cn.eqianyuan.bean.po.SignUpPO">
        insert into sign_up_history (select * from sign_up where id = #{id})
    </insert>
</mapper>